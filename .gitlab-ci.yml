

stages:  
  - test        # List of stages for jobs, and their order of execution
  - build
  - deploy



unit-test-job:   # This job runs in the test stage.
    stage: test
    image: node:18    # It only starts when the job in the build stage completes successfully.
    script:
        - cd server
        - npm install jest
        - npm install mongoose
        - npm run tests
    only:
      changes:
        - "server/**/*"


build-backend-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker:latest
  services:
        - docker:dind
  script:
        - cd server
        - docker build -t $CI_REGISTRY_IMAGE/backend:1.1 .
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/backend:1.1
  only:
    changes:
        - "server/**/*"

build-frontend-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker:latest
  services:
        - docker:dind
  script:
        - cd client
        - docker build -t $CI_REGISTRY_IMAGE/frontend:1.2 .
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/frontend:1.2
  only:
    changes:
        - "client/**/*"
    
deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
